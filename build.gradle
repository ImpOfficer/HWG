plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.4.0"
}

import groovy.json.JsonOutput
import groovy.json.JsonSlurper

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.modName
version = project.modVersion
group = project.mavenGroup

repositories {
    maven { url "https://cfa2.cursemaven.com" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://libs.azuredoom.com:4443/mods" }
    maven { url "https://dl.cloudsmith.io/public/tslat/sbl/maven/" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url 'https://maven.parchmentmc.org' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.2:2023.12.10@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loaderVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"
    modImplementation "mod.azure.azurelib:azurelib-fabric-${project.minecraftVersion}:${project.azurelibVersion}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenuVersion}"
    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-fabric-${project.minecraftVersion}:${project.sblVersion}"
    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-common-${project.minecraftVersion}:${project.sblVersion}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.reiVersion}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.reiVersion}"
    modApi "dev.architectury:architectury-fabric:${project.archVersion}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${project.clothVersion}"
    //modCompileOnly "curse.maven:BetterC-639842:4685416"
    modCompileOnly "curse.maven:playeranimator-658587:5029693"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }

    doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

jar {
    from "LICENSE"
}

loom {
    accessWidenerPath = file("src/main/resources/hwg.accesswidener")

    runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
        datagen {
            inherit server
            name "Minecraft Datagen"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=hwg"

            runDir "build/datagen"
        }
    }
}

if (file('key.properties').exists()) {
    publishMods {
        def releaseProp = new Properties()
        File secretPropsFile = file("key.properties")
        releaseProp.load(secretPropsFile.newInputStream())
        file = remapJar.archiveFile
        changelog = rootProject.file("changelog.md").text
        type = STABLE
        modLoaders.add("fabric")

        curseforge {
            projectId = project.curseforgeID
            projectSlug = project.projectSlug
            accessToken = releaseProp.getProperty("curseKey")
            minecraftVersions.add("${minecraftVersion}")
            requires {
                slug = "fabric-api"
            }
            requires {
                slug = "azurelib"
            }
            requires {
                slug = "smartbrainlib"
            }
        }
        modrinth {
            projectId = project.modrinthID
            accessToken = releaseProp.getProperty('modrinthKey')
            minecraftVersions.add("${minecraftVersion}")
            requires {
                slug = "fabric-api"
            }
            requires {
                slug = "azurelib"
            }
            requires {
                slug = "smartbrainlib"
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}
