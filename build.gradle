buildscript {
    repositories {
    	maven { url  = 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
	maven {
		url = "https://maven.theillusivec4.top/"
	}
	maven {	
		url = 'https://maven.fabricmc.net/io/github/prospector/modmenu/'
	}
	maven {
        url = "https://www.cursemaven.com"
    }
     maven {
        name = "onyxstudios"
        url = "https://maven.abusedmaster.xyz"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name "Siphalor's Maven"
        url "https://maven.siphalor.de"
    }
    maven {
        name "terraform wood api, trinkets"
        url "https://maven.terraformersmc.com"
    }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven { url  = 'https://plugins.gradle.org/m2/' }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.16.5:3.0.45:dev'
	modImplementation 'curse.maven:TDI-245733:3144149'
    modApi "me.shedaniel.cloth:cloth-config-fabric:4.11.14"
    include "me.shedaniel.cloth:cloth-config-fabric:4.11.14"
	modImplementation "de.siphalor:nbtcrafting-1.16:2+"
	include "de.siphalor:nbtcrafting-1.16:2+"
	modImplementation 'curse.maven:modmenu-308702:3268909'
    
    modImplementation "vazkii.patchouli:Patchouli:1.16.4-51-FABRIC"
	modImplementation 'curse.maven:BW-394915:3375181'
	//modImplementation 'curse.maven:trinkets-341284:3100959'
	//modImplementation 'curse.maven:somnus-433538:3218841'
	//modImplementation 'curse.maven:impersonate-360333:3186818'
	//modImplementation 'curse.maven:pehkui-319596:3300900'
	//modImplementation 'curse.maven:cca-318449:3312678'
	//modImplementation 'curse.maven:ccaentity-318449:3312682'
	//modImplementation 'curse.maven:ccabase-318449:3312679'
    //modImplementation "com.jamieswhiteshirt:reach-entity-attributes:1.1.1"
    //include "com.jamieswhiteshirt:reach-entity-attributes:1.1.1"
    //modImplementation "com.github.emilyploszaj:step-height-entity-attribute:1.0.1"
    //include "com.github.emilyploszaj:step-height-entity-attribute:1.0.1"
    //modImplementation "io.github.ladysnake:PlayerAbilityLib:1.2.1"
    //include "io.github.ladysnake:PlayerAbilityLib:1.2.1"
    //modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_wood_api_version}"
    //include "com.terraformersmc.terraform-api:terraform-wood-api-v1:${terraform_wood_api_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

java {
	withSourcesJar()
}

jar {
	from "LICENSE"
}

minecraft {
	accessWidener "src/main/resources/hwg.accesswidener"
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "448106"
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
        	addGameVersion("1.16.5")
        	addGameVersion("Fabric")
        	addGameVersion("Java 8")

        	relations {
            	requiredDependency 'fabric-api'  
            	requiredDependency 'geckolib-fabric'  
            	optionalDependency 'patchouli-fabric'  
        	}
        	mainArtifact(remapJar)

        	afterEvaluate {
            	uploadTask.dependsOn("remapJar")
        	}
    	}
    	options {
    		//debug = true
        	forgeGradleIntegration = false
    	}
    }
}