buildscript {
    repositories {
        jcenter()
    	maven { url  = 'https://plugins.gradle.org/m2/' }
    }
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "software.bernie.geckolib:geckolib-fabric-1.17:3.0.24"
	modApi("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
    	exclude(group: "com.terraformersmc.modmenu")
    }
    modCompileOnly "vazkii.patchouli:Patchouli:1.17-55-FABRIC-SNAPSHOT"	
	modImplementation 'curse.maven:modmenu-308702:3348711'
	modImplementation 'curse.maven:TDI-245733:3358651'
	modImplementation 'curse.maven:cca-318449:3380730'
	modImplementation 'curse.maven:ccaentity-318449:3380734'
	modImplementation 'curse.maven:ccaworld-318449:3380739'
	modImplementation 'curse.maven:ccabase-318449:3380731'
}

repositories {
    maven {
        name = "reach"
        url = "https://maven.jamieswhiteshirt.com/libs-release"
    }
	maven {
		url = "https://maven.theillusivec4.top/"
	}
	maven {	
		url = 'https://maven.fabricmc.net/io/github/prospector/modmenu/'
	}
	maven {
        name = "Ladysnake Libs"
        url = 'https://dl.bintray.com/ladysnake/libs'
    }
	maven {
        url = "https://www.cursemaven.com"
    }
     maven {
        name = "OnyxStudios"
        url = "https://maven.abusedmaster.xyz"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name "Siphalor's Maven"
        url "https://maven.siphalor.de"
    }
    maven { url "https://maven.shedaniel.me/" }
    maven { url = 'https://maven.terraformersmc.com/' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven { url  = 'https://plugins.gradle.org/m2/' }
}

processResources {
    inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

loom {
	accessWidenerPath = file("src/main/resources/hwg.accesswidener")
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "448106"
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
			addGameVersion("1.17.1")
			addGameVersion("Fabric")
			addGameVersion("Java 16")

        	relations {
            	requiredDependency 'fabric-api'  
            	requiredDependency 'geckolib'  
            	requiredDependency 'cloth-config'  
            	optionalDependency 'patchouli-fabric'   
        	}
        	mainArtifact(remapJar)

        	afterEvaluate {
            	uploadTask.dependsOn("remapJar")
        	}
    	}
    	options {
    		//debug = true
        	forgeGradleIntegration = false
    	}
    }
}